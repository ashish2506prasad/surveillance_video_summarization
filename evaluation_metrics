import numpy as np
import math 
import pandas as pd
import os

def hhmmss_to_seconds(time):  #converts hh:mm:ss to seconds
    time = time.split(':')
    return int(time[0])*3600 + int(time[1])*60 + int(time[2])

def get_temporal_iou(actual_interval, predicted_interval):
    #actual_interval = [start, end]
    #predicted_interval = [start, end]
    actual_interval = [hhmmss_to_seconds(actual_interval[0]), hhmmss_to_seconds(actual_interval[1])]
    predicted_interval = [hhmmss_to_seconds(predicted_interval[0]), hhmmss_to_seconds(predicted_interval[1])]
    intersection = max(0, min(actual_interval[1], predicted_interval[1]) - max(actual_interval[0], predicted_interval[0]))
    union = max(actual_interval[1], predicted_interval[1]) - min(actual_interval[0], predicted_interval[0])
    return intersection/union

def get_f1_score(actual_interval, predicted_interval):
    #actual_interval = [start, end]
    #predicted_interval = [start, end]
    actual_interval = [hhmmss_to_seconds(actual_interval[0]), hhmmss_to_seconds(actual_interval[1])]
    predicted_interval = [hhmmss_to_seconds(predicted_interval[0]), hhmmss_to_seconds(predicted_interval[1])]
    intersection = max(0, min(actual_interval[1], predicted_interval[1]) - max(actual_interval[0], predicted_interval[0]))
    precision = intersection/(predicted_interval[1] - predicted_interval[0])
    recall = intersection/(actual_interval[1] - actual_interval[0])
    return 2*precision*recall/(precision + recall)

# I have 'n_crime' number of crimmes and for each crime I have 'n_vid' number of videos and 'n_query' number of queries
# I want to calculate the average temporal iou and f1 score for each crime corresponding to each query i.e for each crime i want 'n_query' number of average temporal iou and print in a table

def evaluate_model(n_query, path_to_csv, crime):  
    """args:
    n_crime: number of crimes
    n_vid: number of videos per crime
    n_query: number of queries per crime
    path_to_csv: path to the csv file
    crime: the particular crime for which you want to evaluate the model
    """
    path_to_csv = os.path.join(path_to_csv, crime)
    start_end_df = pd.read_csv(os.path.join(path_to_csv, "start_end.csv"))
    n_vid = len(start_end_df)

    for i in range(n_vid):
        for j in range(n_query):
            df = pd.read_csv(path_to_csv + "/start_end.csv")
            actual_interval = df['start_end'].values[0].split(',')
            predicted_interval = df['predicted_start_end'].values[0].split(',')
            avg_temporal_iou = get_temporal_iou(actual_interval, predicted_interval)
            avg_f1_score = get_f1_score(actual_interval, predicted_interval)
            print("For video " + str(i) + " and query " + str(j) + " the average temporal iou is " + str(avg_temporal_iou) + " and the f1 score is " + str(avg_f1_score))
    

    # df = pd.read_csv(path_to_csv)
    # crimes = df['crime'].unique()
    # crimes = crimes[:n_crime]
    # queries = df['query'].unique()
    # queries = queries[:n_query]
    # avg_temporal_iou = np.zeros((n_crime, n_query))
    # avg_f1_score = np.zeros((n_crime, n_query))
    # for i in range(n_crime):
    #     for j in range(n_query):
    #         actual_interval = df[(df['crime']==crimes[i]) & (df['query']==queries[j])]['start_end'].values[0].split(',')
    #         predicted_interval = df[(df['crime']==crimes[i]) & (df['query']==queries[j])]['predicted_start_end'].values[0].split(',')
    #         avg_temporal_iou[i][j] = get_temporal_iou(actual_interval, predicted_interval)
    #         avg_f1_score[i][j] = get_f1_score(actual_interval, predicted_interval)
    # avg_temporal_iou = np.mean(avg_temporal_iou, axis=1)
    # avg_f1_score = np.mean(avg_f1_score, axis=1)
    # return avg_temporal_iou, avg_f1_score
 
    
